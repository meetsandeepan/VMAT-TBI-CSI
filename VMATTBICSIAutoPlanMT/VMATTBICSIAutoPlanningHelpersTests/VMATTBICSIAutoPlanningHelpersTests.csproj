<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props" Condition="Exists('..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{683DF748-F200-4F90-8343-57920E92EEFD}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>VMATTBICSIAutoPlanningHelpersTests</RootNamespace>
    <AssemblyName>VMATTBICSIAutoPlanningHelpersTests</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <TestProjectType>UnitTest</TestProjectType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x64\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <LangVersion>7.3</LangVersion>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\x64\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <LangVersion>7.3</LangVersion>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="PresentationCore" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.2.2.7\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.2.2.7\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="Telerik.JustMock, Version=2024.3.805.336, Culture=neutral, PublicKeyToken=721b6c5bc0326b3a, processorArchitecture=MSIL">
      <HintPath>..\packages\JustMock.Commercial.2024.3.805.336\lib\net472\Telerik.JustMock.dll</HintPath>
    </Reference>
    <Reference Include="VMS.TPS.Common.BusinessLogic.Interface">
      <HintPath>..\..\..\VMS_TPS_resources\16.1\VMS.TPS.Common.BusinessLogic.Interface.dll</HintPath>
    </Reference>
    <Reference Include="VMS.TPS.Common.Calculation.Interface">
      <HintPath>..\..\..\VMS_TPS_resources\16.1\VMS.TPS.Common.Calculation.Interface.dll</HintPath>
    </Reference>
    <Reference Include="VMS.TPS.Common.Model.API">
      <HintPath>..\..\..\VMS_TPS_resources\16.1\VMS.TPS.Common.Model.API.dll</HintPath>
    </Reference>
    <Reference Include="VMS.TPS.Common.Model.Interface">
      <HintPath>..\..\..\VMS_TPS_resources\16.1\VMS.TPS.Common.Model.Interface.dll</HintPath>
    </Reference>
    <Reference Include="VMS.TPS.Common.Model.Types">
      <HintPath>..\..\..\VMS_TPS_resources\16.1\VMS.TPS.Common.Model.Types.dll</HintPath>
    </Reference>
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="EqualityComparerClasses\DaemonModelComparer.cs" />
    <Compile Include="EqualityComparerClasses\IsocenterModelComparer.cs" />
    <Compile Include="EqualityComparerClasses\OptimizationConstraintComparer.cs" />
    <Compile Include="EqualityComparerClasses\OptTSCreationCriteriaComparer.cs" />
    <Compile Include="EqualityComparerClasses\PlanObjectiveModelComparer.cs" />
    <Compile Include="EqualityComparerClasses\PlanTargetModelComparer.cs" />
    <Compile Include="EqualityComparerClasses\RequestedOptTSStructureComparer.cs" />
    <Compile Include="EqualityComparerClasses\RequestedPlanMetricComparer.cs" />
    <Compile Include="EqualityComparerClasses\RingModelComparer.cs" />
    <Compile Include="EqualityComparerClasses\TSManipulationComparer.cs" />
    <Compile Include="Helpers\CalculationHelperTests.cs" />
    <Compile Include="Helpers\ConfigurationHelperTests.cs" />
    <Compile Include="Helpers\ContourHelperTests.cs" />
    <Compile Include="Helpers\CSITestBeamBuilder.cs" />
    <Compile Include="EnumTypeHelpers\ExportFormatTypeHelperTests.cs" />
    <Compile Include="Helpers\IsoNameHelperTests.cs" />
    <Compile Include="Helpers\OptimizationLoopHelperTests.cs" />
    <Compile Include="Helpers\OptimizationSetupHelperTests.cs" />
    <Compile Include="EnumTypeHelpers\OptimizationTypeHelperTests.cs" />
    <Compile Include="Helpers\PlanObjectiveHelperTests.cs" />
    <Compile Include="Helpers\PlanPrepHelperTests.cs" />
    <Compile Include="Helpers\StructureTuningHelperTests.cs" />
    <Compile Include="Helpers\TargetsHelperTests.cs" />
    <Compile Include="Helpers\TBITestBeamBuilder.cs" />
    <Compile Include="Helpers\TSManipulationTypeHelperTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\VMATTBICSIAutoplanningHelpers\VMATTBICSIAutoPlanningHelpers.csproj">
      <Project>{B3FBF7B5-9E18-43BA-B40F-144682A3956E}</Project>
      <Name>VMATTBICSIAutoPlanningHelpers</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props'))" />
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets'))" />
  </Target>
  <Import Project="..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets" Condition="Exists('..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets')" />
</Project>